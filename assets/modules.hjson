{
    "SQL": '''
    Tabla INVENTARIO_REPORTES: almacena los reportes regulatorios que las instituciones deben presentar según su entidad regulada. Cada registro se identifica por ID_INVENTARIO_REPORTE y CLAVE_REP, y está asociado a un país (CLAVE_PAIS), entidad regulada (CLAVE_ENTIDADREGULADA), regulador (CLAVE_REG), serie (CLAVE_SERIE), subserie (SUBSERIE) y grupo de reportes (CLAVE_GRUPO). Incluye metadatos como nombre del reporte (REPORTE), sección (CLAVE_SECCION_REP), versión (CLAVE_VERSION_REPORTE), periodicidad (CLAVE_PERIODO), descripción detallada (DESCRIPCION_ESP), fecha esperada de entrega (CLAVE_FECHA_ENT_REP), características específicas (CARACTERISTICAS), normativa asociada (CLAVE_REGULACION_REP), fechas de alta y última actualización (FECHA_ALTA, FECHA_ACTUALIZADA), clave general de agrupación (CLAVE_REP_GENERAL), clasificación por fecha (CLASIFICACION) y estado de vigencia (VIGENTE).
    Tabla INVENTARIO_VALIDACIONES: almacena las validaciones aplicadas a los reportes regulatorios para asegurar su calidad y precisión. Cada registro se identifica por ID_INVENTARIO_VALIDACION y CLAVE_VALIDACION, y está vinculado a un país (CLAVE_PAIS), entidad regulada (CLAVE_ENTIDADREGULADA), regulador (CLAVE_REG) y reporte asociado (CLAVE_REP). Incluye historial de validaciones previas (ID_VALIDACION_ANT), descripción detallada (DESCRIPCION_VALIDACION), tipo de validación (TIPO_VALIDACION), validaciones de cálculos automáticos (TIPO_VALIDACION_CALC), fechas de alta y actualización (FECHA_ALTA, FECHA_ACTUALIZADA), identificador complementario (ID_VAL) y campo específico del reporte al que se aplica (CAMPO).
    Tabla CLIENTE: almacena la información de los clientes que utilizan el sistema. Cada registro se identifica por ID_CLIENTE y CLAVE_CLIENTE, y está asociado a un país (CLAVE_PAIS), nombre del cliente (NOMBRE_CLIENTE), dirección (DIRECCION) y otros atributos relevantes. Incluye fechas de alta y de última modificación (FECHA_ALTA, FECHA_MODIFICA) y un indicador de actividad (ACTIVO). Esta estructura permite gestionar la información de los clientes y su relación con los contratos.
    Tabla CONTRATOS: almacena los contratos asociados a los clientes. Cada registro se identifica por ID_CONTRATO y CLAVE_CONTRATO, y está vinculado a un cliente (CLAVE_CLIENTE), nombre del contrato (NOMBRE_CONTRATO), fechas de alta y de última modificación (FECHA_ALTA, FECHA_MODIFICA), así como la clave de plataforma (CLAVE_PLATAFORMA). Esta estructura permite gestionar la información de los contratos y su relación con los clientes.
    Tabla CONTRATOS_REPORTES: almacena la relación entre contratos y reportes. Cada registro se identifica por ID_CONTRATO_REPORTES y la combinación de CLAVE_CONTRATO y CLAVE_REP como clave primaria, vinculando un contrato con un reporte específico. Incluye fechas estimadas e instaladas para QA (FECHA_ESTIMADA_QA, FECHA_INSTALADO_QA), certificación (FECHA_ESTIMADA_CERT, FECHA_CERTIFICADO) y producción (FECHA_ESTIMADA_PROD, FECHA_INSTALADO_PROD), además de la etapa del contrato (ETAPA) y un indicador de uso (EN_USO). Esta estructura permite gestionar el avance de la implementación de los reportes en los distintos entornos y su estado de uso.
    Las siguientes tablas son el cruce de las informacion es decir las diferentes correlaciones que se pueden encontrar en ambas tablas princialmente para buscar parametros que son operaciones de cada uno de los dos elementos, ademas de eso involucra la paridad de diferentes columnas como la fecha de alta, fecha de modificacion, entre otras. Estas tablas son importantes para gestionar la relación entre los reportes y las validaciones asociadas.
    Las siguientes tablas son las diferentes correlaciones que surgen de las tablas CONTRATOS_REPORTES y CONTRATOS. Estas tablas son importantes para gestionar la relación entre los clientes, los contratos y los reportes asociados.
    ''',
    "DES": '''
    El módulo de búsqueda por similaridad de descripciones de reportes se nutre de la riqueza semántica contenida en los textos que describen cada uno de los formatos regulatorios y operativos. Para ello, utiliza como fuente principal el campo de descripción asociado a cada reporte, donde se recogen expresiones como “Información de los Trabajadores ISSSTE”, “Información de la verificación de saldos de los Trabajadores que se encuentren en una Prestadora de Servicio” o “Información de operaciones de compra-venta de reporto y préstamo de valores realizadas por Sociedades de Inversión”. Estos fragmentos descriptivos conforman un repositorio textual sobre el cual se aplica un algoritmo de comparación de similaridad que identifica el grado de cercanía entre la consulta del usuario y las descripciones disponibles.

    Los datos que alimentan este módulo son los metadatos textuales de cada reporte, obtenidos de los catálogos de inventario. Cada entrada aporta una breve explicación de su contenido funcional y normativo, por ejemplo “Información de los catálogos de números de cuenta del cliente y de contrapartes y de beneficiarios, según los custodios de las Sociedades de Inversión” o “Información de los escenarios de las matrices de cambios de los instrumentos financieros integrando los escenarios fijos establecidos por el CAR”. El sistema indexa estos textos completos, sin segmentarlos por campos adicionales, para preservar la coherencia semántica y la densidad de términos específicos de cada formato.

    Al recibir una solicitud de búsqueda como “Quiero ver reportes relacionados con la liquidación de operaciones de retiros IMSS” o “Necesito información sobre la composición de instrumentos estructurados en los que invierten los fondos”, el módulo calcula las distancias en el espacio de embeddings o vectores de palabras y devuelve las descripciones más afines, tales como “Información de la liquidación de las operaciones de los retiros IMSS” o “Información de la composición de instrumentos estructurados en los que invierten los fondos que administra la Administradora”. De este modo, el usuario obtiene un listado de candidatos que coinciden en términos clave y en contexto de aplicación normativa o funcional.

    El objetivo principal de este módulo es facilitar el hallazgo de reportes relevantes cuando el usuario no conoce de forma exacta la clave o el nombre técnico, sino que dispone de una idea aproximada de lo que busca. Por ejemplo, si alguien introduce “datos de reclamos de trabajadores” el sistema podría sugerir “Información a detalle de las reclamaciones de los trabajadores recibidas por la Administradora” o “Información de los servicios brindados por las Administradoras”, cubriendo tanto la parte de quejas como la prestación de servicios. Asimismo, ayuda a descubrir reportes relacionados que amplían el alcance de la búsqueda, como “Información a detalle estimada del saldo a traspasar por Trabajador previo a la fecha de liquidación” o “Información de los montos líquidos de los recursos traspasados del Trabajador y traspasos no atendidos”.

    Más allá de servir como un simple autocompletado de nombres, este buscador por similaridad ofrece una capa de aprendizaje continuo: con cada consulta y selección, el módulo ajusta sus métricas de relevancia para priorizar las coincidencias que históricamente han sido útiles. Así, reportes con descripciones técnicas semejantes, como aquellos relacionados con “liquidación”, “matrices de cambios” o “composición de índices”, tienden a agruparse y presentarse de manera ordenada según el grado de concordancia semántica. De esta forma se maximiza la eficiencia en la identificación de formatos que, aunque difieran en su clave interna, comparten objetivos operativos o normativos.

    En resumen, este módulo actúa como un puente entre la intención de texto libre del usuario y la estructura formal de los reportes regulatorios. Trabaja exclusivamente sobre las descripciones y su similaridad lingüística para proponer los reportes más cercanos al requerimiento, facilitando la navegación de catálogos extensos sin necesidad de conocer de antemano los identificadores exactos. De esta forma se garantiza una experiencia de búsqueda ágil, intuitiva y adaptable a las variaciones de lenguaje que los usuarios puedan emplear al referirse a cada reporte.
    ''',
    "JIR": '''
    El conjunto de preguntas predefinidas para generar consultas en JQL abarca un amplio espectro de escenarios operativos y analíticos en un entorno de gestión de incidencias. En primer lugar, se incluyen interrogantes orientadas al estado general de los tickets, tales como el número de incidencias que se encuentran esperando soporte, aquellas en estado crítico o las que exceden los acuerdos de nivel de servicio. Este tipo de solicitud resulta esencial para evaluar de un vistazo el estado de la cola de trabajo y detectar posibles cuellos de botella o áreas que requieren atención inmediata. Asimismo, se plantean consultas dirigidas a identificar tickets sin respuesta por parte del cliente, aquellos que han permanecido abiertos durante más de un mes o los que se han cerrado sin registrar el tiempo invertido, ofreciendo métricas clave de productividad y seguimiento.

    Desde la perspectiva temporal, el repertorio de ejemplos incluye preguntas sobre tickets creados en períodos específicos, como la mañana del día en curso o la última semana, así como las incidencias resueltas en los últimos siete días o las reabiertas durante el último mes. Este tipo de búsquedas permite generar informes dinámicos para evaluar el ritmo de creación y resolución de incidencias en sprints o ciclos de trabajo definidos, además de detectar tickets que han cambiado de estado de forma excesiva en un intervalo breve, lo cual puede ser indicativo de procesos inestables o definiciones de flujo de trabajo que requieren ajuste.

    Para abordar la asignación y carga de trabajo de los distintos equipos, se han preparado ejemplos de consultas que recuperan las tareas asignadas al equipo de desarrollo con fechas límite próximas, los tickets de control de calidad en espera de pruebas prolongadas o las incidencias escaladas en el soporte. También se definen interrogantes para detectar tickets con dependencias cruzadas entre equipos, aquellos sin responsable asignado o los que requieren coordinación entre áreas como UX y QA. Estas búsquedas facilitan la supervisión de la colaboración interfuncional y la detección de dificultades en la distribución de responsabilidades.

    En el ámbito de la relación con los clientes, el catálogo contempla preguntas sobre la cantidad de clientes que han generado tickets en trimestres recientes, las solicitudes de nuevos contratos aún pendientes y las incidencias vinculadas con clientes premium. Adicionalmente, se plantean ejemplos para identificar tickets que esperan respuesta de los clientes durante más de dos semanas o aquellos creados por un cliente específico en un periodo determinado, lo que permite realizar análisis de comportamiento de los usuarios y detectar desviaciones en el nivel de servicio ofrecido.

    La personalización mediante etiquetas también forma parte de este repertorio: se incluyen búsquedas de tickets marcados como urgentes y ubicados en el backlog, aquellos con comentarios pendientes de respuesta en días recientes o los que ostentan la etiqueta de impacto alto pese a tener prioridad baja. Asimismo, se detectan las tareas bloqueadas por dependencias externas, los elementos con etiquetas personalizadas definidas por el equipo y los tickets marcados como bloqueados sin cambios en su estado durante varios días, contribuyendo a la identificación ágil de obstáculos para el flujo de trabajo.

    Para medir el rendimiento, las preguntas plantean cómo determinar los tickets que exceden los tiempos promedio de resolución por proyecto, calcular el tiempo medio de resolución en la semana en curso o conocer el porcentaje de incidencias resueltas por cada responsable en el mes. Otra clase de consultas obtiene tickets sin actualizaciones durante periodos prolongados o aquellos en estado crítico sin resolver más de diez días, proporcionando indicadores de eficiencia operativa y niveles de atención.

    Finalmente, el conjunto incorpora casos avanzados y misceláneos que cubren aspectos como el número de adjuntos en tickets en estado por hacer, las asignaciones automáticas sin revisión manual, los bloqueadores activos en el sprint actual y las dependencias externas sin resolver. También se incluyen ejemplos para analizar tickets de tipo bug con cambios de prioridad respecto a la asignación inicial, incidencias reabiertas tras marcarse como hechas y casos de tickets categorizados por tipo de incidencia con largos periodos sin actualización o sin adjuntos. Este repertorio rico y detallado en escenarios garantiza que cualquier solicitud de consulta en lenguaje Jira pueda encajar en las categorías definidas y que las preguntas resulten fácilmente identificables y traducibles a JQL de manera coherente y exhaustiva.
    ''',
}